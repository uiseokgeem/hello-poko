upstream poko {
    server web:8000;
}

server {
    listen 80;

    server_name poko-dev.com;

    # Let's Encrypt 인증을 위한 /.well-known/acme-challenge/ 요청 처리
     location /.well-known/acme-challenge/ {
        root /var/www/certbot;
     }

    # HTTP 요청을 HTTPS로 리다이렉트
    location / {
        return 301 https://$host$request_uri;
    }

}

# 1. HTTP 서버 블록 (포트 80)
# 역할: HTTP(비보안) 요청을 처리합니다.
# 리다이렉트: HTTP 요청을 받은 경우, 이를 HTTPS로 리다이렉트합니다. 이는 모든 트래픽이 암호화된 상태로 전송되도록 보장합니다.
# Let’s Encrypt 인증: Let’s Encrypt와 같은 인증 기관은 도메인 소유권을 확인하기 위해 /.well-known/acme-challenge/ 경로에 요청을 보냅니다.
# 이 요청은 HTTP로 전송되며, 이를 처리하기 위해 해당 경로를 root 디렉토리로 지정합니다.

server {
    listen 443 ssl;
    server_name poko-dev.com;

    # frontend static 파일 서빙
    location /frontend-static/ {
        alias /usr/share/nginx/html/;  # 프론트엔드 빌드 파일의 정적 자산 경로
        try_files $uri $uri/ =404;  # 없는 파일에 대한 처리
    }

    # frontend build 파일 서빙
    location / {
        root /usr/share/nginx/html;  # Nginx 컨테이너 내부의 경로
        try_files $uri $uri/ /index.html =404;
    }
    
    # Django API 요청을 백엔드 프록시
    location /api/ {
        proxy_pass http://web:8000;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_redirect off;
    }

    # Django admin 프록시
    location /admin/ {
        proxy_pass http://web:8000/admin/;  # Django admin 페이지로 프록시
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $host;
        proxy_set_header Origin $http_origin;  # Origin 헤더 추가
        proxy_redirect off;
    }

    # Django 정적 파일 경로
    location /static/ {
        alias /usr/src/app/static/;
    }
    
    # Django 미디어 파일 경로
    location /media/ {
        alias /usr/src/app/media/;
    }

     # 보안 관련 파일 및 디렉토리 접근 차단
    location ~ /\. {
        deny all;
    }

    location ~* /(vendor|phpunit|telescope|login\.action|debug|server-status) {
        deny all;
        return 403;
    }

    # 보안 헤더 추가 (XSS, MIME sniffing 방지 등)
    add_header X-Frame-Options "DENY";  # 클릭재킹 방지
    add_header X-Content-Type-Options "nosniff";  # MIME 타입 강제 방지
    add_header X-XSS-Protection "1; mode=block";  # XSS 보호
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; object-src 'none';";


    ssl_certificate /etc/letsencrypt/live/poko-dev.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/poko-dev.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # HSTS 설정 (HTTPS 강제)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
}

# 2. HTTPS 서버 블록 (포트 443)
# 역할: HTTPS(보안) 요청을 처리합니다. 이 블록에서 실제로 사이트의 콘텐츠를 서빙합니다.
# 보안 트래픽 처리: HTTPS를 통해 암호화된 트래픽을 처리하여 보안성을 유지합니다.
# 프론트엔드, API, Django Admin, 정적 파일 및 미디어 파일 서빙: HTTPS를 통해 각각의 요청을 처리합니다.
# SSL 인증서 사용: SSL 인증서를 적용하여 서버와 클라이언트 간의 통신을 암호화합니다.